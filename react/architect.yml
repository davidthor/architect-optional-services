name: react

description: |
  Example component that includes a React frontend

homepage: https://github.com/architect-templates/react

keywords:
  - react
  - express

## Want to learn about dependencies? Follow along with "Adding a Dependency" in the README
##   then uncomment the two lines below and uncomment line 38 (REACT_APP_API_ADDR)
dependencies:
  node-rest-api: latest

# Below are the configured services for the React component. Note that the actual
# react application we're working on is defined as a service on line 29
# For more info - https://docs.architect.io/components/services/
services:
  app:
    # Build context is the location of your application relative to the architect.yml file
    build:
      context: ./
      args:
        NODE_ENV: production
    # Main interface port used to help define the url in the `interfaces` block on line 53
    interfaces:
      main:
        port: 8080
        # ingresses are used to expose the application to the gateway, allowing
        #   other services and dependencies to connect to it.
        #   For more info - https://docs.architect.io/components/ingress-rules/
        ingress:
          subdomain: app
    environment:
      PORT: 8080
      REACT_APP_API_ADDR: ${{ dependencies.node-rest-api.services.api.interfaces.main.ingress.url }}
    # The entrypoint is used here to import environment variables to the client-side app in production
    entrypoint: /usr/src/app/bin/entrypoint.sh
    # The liveness_probe makes sure the application is healthy - if not, it will re-start the application
    liveness_probe:
      command: curl --fail 0.0.0.0:8080
      interval: 30s
      failure_threshold: 3
    # The debug block is used to enable hot-reloading to make real-time changes to an
    #   application while running `architect dev`. For more info, see -
    #   https://docs.architect.io/components/local-configuration/#hot-reloading
    debug:
      command: npm run dev
      build:
        dockerfile: Dockerfile.dev
        args:
          NODE_ENV: development
      volumes:
        src:
          # The `WORKDIR` defined in the Dockerfile (/usr/src/app) + name of source code directory (/src)
          mount_path: /usr/src/app/src
          # Path to source code relative to the architect.yml file (/src)
          host_path: ./src
